step1:
Create ec2 role
create EKS-Admin-policy policy: 
in JSON  

{
 "Version": "2012-10-17",
 "Statement": [
 {
 "Effect": "Allow",
 "Action": [
 "eks:*"
 ],
 "Resource": "*"
 }
 ]
}


create CloudFormation-Admin-policy:
in JSON

{
 "Version": "2012-10-17",
 "Statement": [
 {
 "Effect": "Allow",
 "Action": [
 "cloudformation:*"
 ],
 "Resource": "*"
 }
 ]
}

Create policy :ssm get parameter

"Statement": [
    {
        "Effect": "Allow",
        "Action":[
            "ssm:DescribeParameters"
        ],
        "Resource": "*"
    },
    {
        "Effect": "Allow",
        "Action":[
            "ssm:GetParameters",
            "ssm:GetParameter",
            "ssm:GetParametersByPath"
        ],
        "Resource": "arn:aws:ssm:ca-central-1::parameter/*"
    }
]


finally, assign the following policies to your above role 

AmazonEC2FullAccess
IAMFullAccess
AmazonVPCFullAccess
CloudFormation-Admin-policy
EKS-Admin-policy
ssm full access policy 
ssm get parameter 

Step2:
  apt update 
  apt upgrade
 Install Python : apt install python3
 install pythonpip: apt install python3-pip
 pip install --user awscli
 export PATH=$PATH:/home/$(whoami)/.local/bin

Step3: 
 mkdir -p  ~/.aws/
 vi ~/.aws/credentials
 [default]
 region=us-east-1
 output=json


Step 4: To install or upgrade eksctl on Linux

curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
sudo mv /tmp/eksctl /usr/local/bin
kubectl version --short --client

Step 5: Install kubelet and kubectl

sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl
sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubelet=1.22.10-00 kubectl=1.22.10-00 


Step 6:: Create yaml file 
---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: Sagar-Cluster
  region: eu-west-2

vpc:
  id: vpc-03ce661f5888a27c7
  cidr: "172.31.0.0/16"
  subnets:
    public:
      public-one:
        id: subnet-001cfa37b715aaf7c
      public-two:
        id: subnet-0a64f5a2a854748fe
      public-three:
        id: subnet-09b1296f8c517bcd8
    

nodeGroups:
  - name: ng-1
    instanceType: t2.medium
    desiredCapacity: 2
    subnets:
      - public-one
      - public-two
  - name: ng-2
    instanceType: t2.medium
    desiredCapacity: 1
    subnets:
      - public-three
Note : change name , subnet and vpc and instance type accordingly in yml file 

Step 7 :
eksctl create cluster -f  EKS_Cluster.yml (yamal file name )

Go to cloud formation service -stack -verify the resource creating 
Go to Elastic kubernetes service verify cluster is created or not here 
Go to terminal --once the EKS cluster is ready -execute below command 

Step 8:
curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
chmod +x ./aws-iam-authenticator
mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin

Step 9:
kubectl get nodes
kubectl get pods  -A

Step 10:
eksctl delete cluster --name Sam-Cluster
----------------------------------------------------------------------------------------------------------------------------------------------
1.	apt update
2.	apt upgrade
3.	apt install python3
4.	apt install python3-pip
5.	pip install --user awscli
6.	export PATH=$PATH:/home/$(whoami)/.local/bin
7.	mkdir -p  ~/.aws/
8.	vi ~/.aws/credentials
9.	curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
10.	sudo mv /tmp/eksctl /usr/local/bin
11.	vi ~/.aws/credentials
12.	kubectl version --short --client
13.	eksctl version
14.	which eksctl version
15.	whoami show-server
16.	sudo apt-get update
17.	sudo apt-get install -y apt-transport-https ca-certificates curl
18.	sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
19.	echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
20.	apt-get update
21.	apt-get install -y kubelet=1.22.10-00 kubectl=1.22.10-00
22.	ekctl version
23.	kubectl version
24.	kubectl version --short --client
25.	vi ekscli.yml
26.	eksctl create cluster -f ekscli.yml
27.	curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
28.	chmod +x ./aws-iam-authenticator
29.	mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
30.	kubectl get nodes
31.	kubectl get pods  -A
32.	eksctl delete cluster --name Sam-Cluster




